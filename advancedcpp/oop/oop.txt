Some OOP Notes to keep in mind 

* Classes/Structs
- Class members are default private vs Struct members are defualt public
- Classes stored on heap of memory 
- Struct stored in the stack 
- Stack is a convenient and efficient way of handling value-types as variables
- Classes have destructors 

* Keywords 
final ->  
volatile -> signal handler 
    - is intended to prevent the compiler from applying any optimizations on 
    - objects that can change in ways that cannot be determined by the compiler
    - ommited off optimzation because values can change
const-volatile -> 
virtuals -> 
auto -> 
const -> non mutuable 
friend ->
variadic functions -> adding multiple args in a function 
    -> ... is key 
    -> va_list
    -> va_start 
    -> va_arg

* Reference 
- Pass by reference with receiving the adress of the var &var 

* Data Structures 
- unordered map 
- vector
- array 
- map 
- forward list 
- ordered_map
- priority_queue

* String Stream
- useful for tokenizing & manpilating string 


* Optimizations 
 - STL iterators (for example) are more efficient when altered with the prefix operators.
    - postfix creates an extra copy 
 - Structure class and structs fields in the most used vars are first 128bytes 
 - sort longest data types to shortest
 - explicit inlining to add optimzation, dont add too many else slow down can speed up to 10%

 %